#+TITLE: Running Jasper Reports from the Simple Report Server
#+DATE: <2015-12-03 Thu>
#+AUTHOR: Ed Cole
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:{} arch:headline
#+OPTIONS: author:t c:nil creator:comment d:(not "LOGBOOK") date:t
#+OPTIONS: e:t email:nil f:t inline:t num:nil p:nil pri:nil stat:t
#+OPTIONS: tags:t tasks:t tex:t timestamp:t toc:nil todo:t |:t
#+CREATOR: Emacs 24.2.1 (Org mode 8.2.10)
#+DESCRIPTION:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export
#+OPTIONS: html-link-use-abs-url:nil html-postamble:nil
#+OPTIONS: html-preamble:nil html-scripts:t html-style:t
#+OPTIONS: html5-fancy:nil tex:t
#+CREATOR: <a href="http://www.gnu.org/software/emacs/">Emacs</a> 24.2.1 (<a href="http://orgmode.org">Org</a> mode 8.2.10)
#+HTML_CONTAINER: div
#+HTML_DOCTYPE: xhtml-strict
#+HTML_HEAD:
#+HTML_HEAD_EXTRA:
#+HTML_LINK_HOME:
#+HTML_LINK_UP:
#+HTML_MATHJAX:
#+INFOJS_OPT:
#+LATEX_HEADER:

One of the original goals of this project was to run Jasper Reports.

* Dependencies
We need to add the following dependencies to our code to include the Jasper Reports libraries.

** Repositories
We need to add two repositories to get all of the dependencies from Jasper Reports.

- http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/ :: This pulls in artifacts that the JasperSoft people had to modify from their standard versions.
- http://jasperreports.sourceforge.net/maven2/ :: This pulls in the modules written by JasperSoft.

** Artifacts
We need to use the following artifacts to run Jasper Reports.

| Group                | Artifact      | Version | Contents                     |
|----------------------+---------------+---------+------------------------------|
| net.sf.jasperreports | jasperreports |   6.2.0 | The JasperReports libraries  |
| org.mozilla          | rhino         |   1.7.7 | The Rhino Javascript library |

Rhino is needed because JasperReports can include JavaScript code.
* How to Run Jasper Reports from Java

You can call Jasper Reports from Java or Groovy code by making calls to the 
[[http://jasperreports.sourceforge.net/api/][JasperReports API]].  Some of the important ones are listed here.

- [[http://jasperreports.sourceforge.net/api/net/sf/jasperreports/engine/JasperCompileManager.html][net.sf.jasperreports.engine.JasperCompileManager]] :: This is a facade class for converting Jasper Reports to and from the XML format.
- [[http://jasperreports.sourceforge.net/api/net/sf/jasperreports/engine/JasperReport.html][net.sf.jasperreports.engine.JasperReport]] :: This is the compiled form of the report.
- [[http://jasperreports.sourceforge.net/api/net/sf/jasperreports/engine/JasperFillManager.html][net.sf.jasperreports.engine.JasperFillManager]] :: This is used to apply the data to the report definition, giving you a JasperPrint object.
- [[http://jasperreports.sourceforge.net/api/net/sf/jasperreports/engine/JasperPrint.html][net.sf.jasperreports.engine.JasperPrint]] :: This is the report with all of the data filled in, ready to be converted into one of the final formats
- [[http://jasperreports.sourceforge.net/api/net/sf/jasperreports/export/Exporter.html][net.sf.jasperreports.export.Exporter]] :: This converts the filled-in report to the desired format.
** So, how do you run a report?
First, compile the report using the [[http://jasperreports.sourceforge.net/api/net/sf/jasperreports/engine/JasperCompileManager.html][JasperCompileManager]].
Next, use the [[http://jasperreports.sourceforge.net/api/net/sf/jasperreports/engine/JasperFillManager.html][JasperFillManager]] to run the report and produce a [[http://jasperreports.sourceforge.net/api/net/sf/jasperreports/engine/JasperPrint.html][JasperPrint]].
Finally, Convert it to the desired output format using an [[http://jasperreports.sourceforge.net/api/net/sf/jasperreports/export/Exporter.html][Exporter]].
* Modifications
** Create an object to represent Jasper Reports report
JasperReport, implements Runnable
** Modify the ReportObjectFactory
*** DONE Add a method, ~getJasperReport()~ to return a callable Jasper Report object
*** DONE Modify getInvocation() to return invocable object for j. report
*** TODO Create an exporter class for rendering the report to its final form.
public class JasperReportExporter
