def version = "2.2.1"

/* 2.2.1: Forgot to pass parameters in ClosureQueryEngine 
 * 2.2.0: Look for param form of same name when running SQL script
 * 2.1.1: Fix column definitions in ClosureQueryEngine
 * 2.1.0: ClosureQueryEngine class
 * 2.0.0: Support for JasperReports
 * 1.2.3: Add isBinary property to OutputFormat; update text of CSV 
 * 1.2.2: Skipped to sync up with Grails project.
 * 1.2.1: Add detailed descriptions to output formats.
 * 1.2.0: Convert CLOB columns to String.
 * 1.1.8: Serve plain SQL scripts.
 * 1.1.7: DynamicSqlQueryEngine - filter params before evaluating SQL query.
 * 1.1.6: Created DynamicSqlQueryEngine class
 * 1.1.4: ListOfValues can now handle two-column SQL.
 * 1.1.2: Replace builder property in ReportObjectFactory with getBuilder()
 */
// What branch do we have checked out?
def currentGitBranch = "git branch".execute().text.readLines()
    .grep {it =~ /^\*/}.first().replaceAll(/^\* /,'')

project.version = version + ((currentGitBranch=='prod')?'':"-$currentGitBranch")
project.group = "edu.sunyjcc"

println "Version: ${project.version}"

def jccGroovydocHome = 'x:/doc/groovydoc'

repositories {
  // Where do we look for dependencies?
  mavenLocal()
  mavenCentral()
  maven {
    url "http://jaspersoft.artifactoryonline.com/jaspersoft/third-party-ce-artifacts/"
  }
  maven {url "http://jasperreports.sourceforge.net/maven2/"}
}

apply plugin: 'groovy'

dependencies {

  compile 'javax.servlet:javax.servlet-api:3.0.1'

  compile 'org.codehaus.groovy:groovy-all:2.4.4'
  compile 'org.apache.ant:ant:1.8.2'
  compile 'net.sf.jasperreports:jasperreports:6.2.0'

  testCompile 'junit:junit:4.11'
  runtime 'net.sf.jasperreports:jasperreports:6.2.0'
  runtime 'org.mozilla:rhino:1.7.7'
  runtime 'org.apache.ant:ant:1.8.2'
}

/***********************************************************************/
/* jar file options                                                    */
/***********************************************************************/

// Include the project version number in the jar file name.
jar.version  = version + ((currentGitBranch == 'prod')?'':"-$currentGitBranch")

/***********************************************************************/
/* groovydoc options                                                   */
/***********************************************************************/
groovydoc.groovyClasspath = configurations.compile
if (currentGitBranch == 'prod') {
  groovydoc.destinationDir = new File("${jccGroovydocHome}/${project.name}")
}
groovydoc {

  // These are needed so that objects (from other packages) referenced in the
  //    groovydoc will be linked to their definitions in the external
  //    documentation
  link("http://docs.oracle.com/javase/6/docs/api", 
       "java.,org.xml.,javax.,org.xml.")
  link("http://www.dpml.net/api/ant/1.7.0", 
       "org.apache.ant.,org.apache.tools.ant.")
  link("http://junit.sourceforge.net/junit3.8.1/javadoc/", 
       "org.junit.,junit.framework.")
  link("http://groovy.codehaus.org/api/", "groovy.,org.codehaus.groovy.")
  // Link up our own library documentation
  //link("file://$jccGroovydocHome", "edu.sunyjcc.")
  new File(jccGroovydocHome).eachDir() {
    if (it.name != project.name) {
      link("file://$jccGroovydocHome/${it.name}", "edu.sunyjcc.${it.name}")
    }
  }
}

task doc
doc.dependsOn groovydoc, javadoc

// Make it so that it will automatically generate the documentation and jar 
// file when you execute the build target.

task wrapper(type: Wrapper) {
  gradleVersion = '2.3'
}

task compile
compile.dependsOn compileGroovy, compileJava
build.dependsOn jar, test, wrapper, doc

/**********************************************************************/
/* Deploy to Maven server                                             */
/**********************************************************************/
apply plugin: 'maven'

uploadArchives {
  repositories {
    mavenDeployer {
        repository(url: "file://x:/source/mvn")
    }
  }
}

uploadArchives.dependsOn build, test
task deploy
deploy.dependsOn groovydoc, uploadArchives, build

